# Configuration Loggers
spring.output.ansi.enabled = always
logging.level.fr.formation = DEBUG

# Configuration du port du serveur Tomcat
server.port = 8081

# Demander à SPRING BOOT d'attendre que HIBERNATE génère la structure de la base de données
spring.jpa.defer-datasource-initialization = true

# Afficher les requêtes SQL générées par Hibernate
spring.jpa.show-sql = true

# Configuration Client Discovery (Eureka Client)
spring.application.name = produit-service

eureka.client.service-url.defaultZone = http://localhost:8761/eureka/

# Configuration du Circuit Breaker pour OpenFeign
spring.cloud.openfeign.circuitbreaker.enabled = true
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled = true

# Configuration du Bulkhead
resilience4j.bulkhead.instances.hello.max-concurrent-calls = 2

# Configuration Broker Kafka | RabbitMQ
# spring.cloud.stream.kafka.binder.brokers = localhost:9092

spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest

spring.cloud.function.definition = onDemoTopic;onDemoTopicFunction;onCommentaireCreated

spring.cloud.stream.bindings.onDemoTopic-in-0.destination = nomtopic
spring.cloud.stream.bindings.onDemoTopic-in-0.group = produitService2

spring.cloud.stream.bindings.onDemoTopicFunction-in-0.destination = nomtopic
spring.cloud.stream.bindings.onDemoTopicFunction-in-0.group = produitService

spring.cloud.stream.bindings.onDemoTopicFunction-out-0.destination = nomtopic.uppercase

spring.cloud.stream.bindings.onCommentaireCreated-in-0.destination = commentaire.created
spring.cloud.stream.bindings.onCommentaireCreated-in-0.group = produitService

# Configuration JWT
spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:8500/realms/oxiane
